<?xml version="1.0" ?>
<robot name="mb3" xmlns:xacro="http://www.ros.org/wiki/xacro" >

<xacro:arg name="laser_visual"  default="true"/>
<xacro:arg name="camera_visual" default="false"/>
<xacro:arg name="imu_visual"    default="false"/>

<xacro:property name="body_color" value="Gazebo/Grey" />
<xacro:property name="sub_color" value="Gazebo/Silver" />

<gazebo>
  <plugin name="control" filename="libgazebo_ros_control.so"/>
</gazebo>

<!-- TODO mu1, mu2 -->
<gazebo reference="base_link">
  <material>${body_color}</material>
  <mu1>0.001</mu1>
  <mu2>0.001</mu2>
</gazebo>

<gazebo reference="wheel_left_link">
  <material>${body_color}</material>
  <!-- mu: 接地摩擦係数, ボールジョイントのような滑る対称は1未満 -->
  <mu1>0.1</mu1>
  <mu2>0.1</mu2>
  <kp>500000.0</kp>
  <kd>10.0</kd>
  <!-- <minDepth>0.001</minDepth> -->
  <maxVel>0.1</maxVel>
  <fdir1>1 0 0</fdir1>
  <!-- <selfCollide>true</selfCollide> -->
</gazebo>

<gazebo reference="wheel_right_link">
  <material>${body_color}</material>
  <mu1>0.1</mu1>
  <mu2>0.1</mu2>
  <kp>500000.0</kp>
  <kd>10.0</kd>
  <!-- <minDepth>0.001</minDepth> -->
  <maxVel>0.1</maxVel>
  <fdir1>1 0 0</fdir1>
  <!-- <selfCollide>true</selfCollide> -->
</gazebo>

<gazebo reference="base_camera_link">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <!-- <selfCollide>true</selfCollide> -->
</gazebo>

<gazebo reference="base_scan">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <!-- <selfCollide>true</selfCollide> -->
</gazebo>

<gazebo reference="cover_top_link">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <!-- <selfCollide>true</selfCollide> -->
</gazebo>

<gazebo reference="cover_bottom_link">
  <material>${sub_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <!-- <selfCollide>true</selfCollide> -->
</gazebo>

  <!-- TODO add imu gazebo plugin -->
  <gazebo reference="imu_link">
    <sensor name="tb3_imu" type="imu">
      <always_on>true</always_on>
      <visualize>$(arg imu_visual)</visualize>
      <update_rate>200</update_rate>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
      <plugin name="turtlebot3_imu" filename="libgazebo_ros_imu_sensor.so">
        <ros>
          <!-- <namespace>/tb3</namespace> -->
          <remapping>~/out:=imu</remapping>
        </ros>
      </plugin>
    </sensor>
  </gazebo>

  <!-- TODO gazebo ros diff drive plugin -->
  <gazebo>
    <plugin name="my_turtlebot3_controller" filename="libgazebo_ros_diff_drive.so">
      <ros>
        <!-- <namespace>/tb3</namespace> -->
      </ros>

      <update_rate>30</update_rate>

      <!-- wheels -->
      <left_joint>wheel_left_joint</left_joint>
      <right_joint>wheel_right_joint</right_joint>

      <!-- kinematics -->
      <wheel_separation>0.287</wheel_separation>
      <wheel_diameter>0.1245</wheel_diameter>

      <!-- limits -->
      <!-- <max_wheel_torque>20</max_wheel_torque> -->
      <max_wheel_torque>40</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>

      <command_topic>cmd_vel</command_topic>

      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>

      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="my_turtlebot3_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <!-- <namespace>/tb3</namespace> -->
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>30</update_rate>
      <joint_name>wheel_left_joint</joint_name>
      <joint_name>wheel_right_joint</joint_name>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu_sensor.so">
      <ros>
        <!-- <namespace>/tb3</namespace> -->
        <remapping>~/out:=imu</remapping>
      </ros>
    </plugin>
  </gazebo>

  <!-- TODO gazebo ros ray sensor plugin -->
  <gazebo reference="base_scan">
    <sensor name="hls_lfcd_lds" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <pose>-0.064 0 0.121 0 0 0</pose>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1.000000</resolution>
            <min_angle>0.000000</min_angle>
            <max_angle>6.28319</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.150</min>
          <max>3.5</max>
          <resolution>0.015000</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="my_turtlebot3_laserscan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <!-- <namespace>/tb3</namespace> -->
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>base_scan</frame_name>
      </plugin>
    </sensor>
  </gazebo>

</robot>
